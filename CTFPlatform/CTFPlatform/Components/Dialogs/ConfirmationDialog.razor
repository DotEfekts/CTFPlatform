@rendermode InteractiveServer
@attribute [StreamRendering]

@inject IJSRuntime JsRuntime

<div class="modal show fade" id="confirmation-modal" tabindex="-1" role="dialog" style="display: block;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="close btn-close" data-dismiss="modal" aria-label="Close" @onclick="() => CloseDialog()"></button>
            </div>
            <div class="modal-body">
                <p>@BodyText</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="() => CloseDialog()">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="() => CloseDialog(true)">@ConfirmText</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string BodyText { get; set; }
    [Parameter]
    public string ConfirmText { get; set; }
    
    [Parameter] 
    public EventCallback<bool> DialogClosed { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await JsRuntime.InvokeVoidAsync("registerClickTrigger", DotNetObjectReference.Create(this), "CloseDialog", "confirmation-modal");
    }

    [JSInvokable]
    public void CloseDialog(bool confirm = false)
    {
        DialogClosed.InvokeAsync(confirm);
    }
}